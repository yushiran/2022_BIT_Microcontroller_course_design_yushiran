C51 COMPILER V9.00   定时器                                                                09/28/2022 16:42:06 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE 定时器
OBJECT MODULE PLACED IN 定时器.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE 定时器.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /* - 计时器实验3 -60秒计数器,每1分钟LED反相1次 */
   2          //==声明区================================
   3          #include        <reg51.h>       // 定义8x51暂存器之标头档,P2-17~19 
   4          #define SEG     P2                      // 定义七节显示器接至Port 2
   5          #define SCANP   P1              // 定义扫瞄线接至Port 1
   6          sbit  LED=P0^7;                 // 声明LED接至P0.7
   7          /*声明T0计时相关声明*/  // THx TLx 计算参考 
   8          #define  count_M1   50000                       // T0(MODE 1)之计量值,0.05s 
   9          #define  TH_M1  (65636-count_M1)/256// T0(MODE 1)计量高8位元 
  10          #define  TL_M1  (65636-count_M1)%256// T0(MODE 1)计量低8位元 
  11          int count_T0=0;                                         // 计算 T0中断次数 
  12          /*声明T1扫瞄相关声明*/
  13          #define  count_M2   250                 // T1(MODE 2)之计量值,0.25ms
  14          #define  TH_M2  (256-count_M2)  // T1(MODE 2)自动载入计量  
  15          #define  TL_M2  (256-count_M2)  // T1(MODE 2)计数量 
  16          char count_T1=0;                                // 计算 T1中断次数      
  17          /* 声明七节显示器驱动信号阵列(共阳) */
  18          char code TAB[10]={     0xc0, 0xf9, 0xa4, 0xb0, 0x99,   //数字0-4
  19                                                  0x92, 0x83, 0xf8, 0x80, 0x98 }; //数字5-9
  20          char disp[2]={ 0xc0, 0xc0 };    // 声明显示区阵列初始显示00
  21          /* 声明基本变量 */
  22          char seconds=0;                 // 秒数 
  23          char scan=0;                    // 扫瞄信号 
  24          //==主程序================================
  25          main()                                  // 主程序开始 
  26          {       IE=0x8a;                        // 1000 1010,启用TF0、TF1中断(6-4页)
  27   1              TMOD=0x21;                      // 0010 0001,T1采mode 2、T0采mode 1
  28   1              TH0=TH_M1; TL0=TL_M1;// 设置T0计数量高8位元、低8位元 
  29   1              TR0=1;                          // 启动T0(7-7页)
  30   1              TH1=TH_M2; TL1=TL_M2;// 设置T1自动载入值、计数量 
  31   1              TR1=1;                          // 启动T1
  32   1              LED=1;                          // 关闭LED
  33   1              while(1);                       // 无穷回圈，程序停滞 
  34   1      }                                               // 主程序结束  
  35          //== T0中断子程序- 计算并显示秒数 ==================
  36          void T0_1s(void) interrupt 1    // T0中断子程序开始 
  37          {       TH0=TH_M1; TL0=TL_M1;           // 设置T0计数量高8位元、低8位元 
  38   1              if (++count_T0==20)                     // 若中断20次,即0.05x20=1秒 
  39   1              {       count_T0=0;                             // 重新计次 
  40   2                      seconds++;                              // 秒数加1
  41   2                      if (seconds==60)                // 若超过60秒 
  42   2                      {       seconds=0;                      // 秒数归0,重新开始 
  43   3                              LED=~LED;                       // 切换LED
  44   3                      }                                               // if叙述结束(超过60秒)
  45   2              }                                                       // if叙述结束(中断20次)
  46   1              disp[1]=TAB[seconds/10];        // 填入十位数显示区 
  47   1              disp[0]=TAB[seconds%10];        // 填入个位数显示区 
  48   1      }                                                               // T0中断子程序结束 
  49          //===T1中断子程序 - 扫瞄 =========================
  50          void T1_8ms(void) interrupt 3   // T1中断子程序开始 
  51          {       if (++count_T1==32)                     // 若中断32次,即0.25mx32=8ms
  52   1                      {       count_T1=0;                     // 重新计次 
  53   2                              if (++scan==3) scan=1;// 若超过十位数,显示个位  
  54   2                              SEG=0xff;                       // 关闭7段显示器 
  55   2                              SCANP=~scan;            // 输出扫瞄信号 
C51 COMPILER V9.00   定时器                                                                09/28/2022 16:42:06 PAGE 2   

  56   2                              SEG=disp[scan-1];       // 输出显示信号 
  57   2                      }                                               // 结束if判断(中断32次)
  58   1      }                                                               // T0中断子程序结束 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    226    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
